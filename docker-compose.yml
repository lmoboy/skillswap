services:
   mysql:
      image: mysql:8.0
      container_name: skillswap-mysql
      environment:
         MYSQL_ROOT_PASSWORD: rootpassword
         MYSQL_DATABASE: skillswap
         MYSQL_USER: skillswap
         MYSQL_PASSWORD: skillswap
      volumes:
         - mysql-data:/var/lib/mysql
      networks:
         - skillswap-network
      restart: unless-stopped
      healthcheck:
         test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
         timeout: 20s
         retries: 10

   backend:
      build:
         context: ./backend
         dockerfile: Dockerfile
      container_name: skillswap-backend
      ports:
         - '0.0.0.0:8080:8080'
      environment:
         - DB_URL=skillswap:skillswap@tcp(mysql:3306)/skillswap?parseTime=true
      volumes:
         - backend-uploads:/root/uploads
      depends_on:
         mysql:
            condition: service_healthy
      networks:
         skillswap-network:
            aliases:
               - backend
      restart: unless-stopped

   frontend:
      build:
         context: ./frontend
         dockerfile: Dockerfile
      container_name: skillswap-frontend
      ports:
         - '0.0.0.0:80:3000'
      environment:
         - ORIGIN=http://89.117.50.20
         - BODY_SIZE_LIMIT=Infinity
         - BACKEND_URL=http://backend:8080
      depends_on:
         backend:
            condition: service_started
      networks:
         - skillswap-network
      restart: unless-stopped

   updater:
      image: containrrr/watchtower
      container_name: skillswap-updater
      volumes:
         - /var/run/docker.sock:/var/run/docker.sock
         - ./:/app
      environment:
         - WATCHTOWER_CLEANUP=true
         - WATCHTOWER_INCLUDE_STOPPED=true
         - WATCHTOWER_POLL_INTERVAL=300
      command: --run-once=false
      networks:
         - skillswap-network
      restart: unless-stopped

   autoupdate:
      image: alpine/git
      container_name: skillswap-git-puller
      working_dir: /app
      volumes:
         - ./:/app
      entrypoint: /bin/sh
      command: -c "while true; do git fetch origin && git reset --hard origin/main && sleep 300; done"
      restart: unless-stopped
      networks:
         - skillswap-network

networks:
   skillswap-network:
      driver: bridge

volumes:
   mysql-data:
   backend-uploads:
